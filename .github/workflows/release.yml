name: Release

on:
  release:
    types: [created]
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Run tests
      run: go test ./cmd/...

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        if [ "${{ matrix.goos }}" = "windows" ]; then
          go build -ldflags="-s -w" -o plz-${{ matrix.goos }}-${{ matrix.goarch }}.exe .
        else
          go build -ldflags="-s -w" -o plz-${{ matrix.goos }}-${{ matrix.goarch }} .
        fi

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./plz-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        asset_name: plz-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        asset_content_type: application/octet-stream
